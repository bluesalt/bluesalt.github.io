<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: https | Jeff Li]]></title>
  <link href="http://bluesalt.github.io/tags/https/atom.xml" rel="self"/>
  <link href="http://bluesalt.github.io/"/>
  <updated>2014-11-15T22:47:54+08:00</updated>
  <id>http://bluesalt.github.io/</id>
  <author>
    <name><![CDATA[Jeff Li]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[jetty-maven-plugin and https support]]></title>
    <link href="http://bluesalt.github.io/blog/2013/07/29/jetty-maven-plugin-and-https-support/"/>
    <updated>2013-07-29T22:46:00+08:00</updated>
    <id>http://bluesalt.github.io/blog/2013/07/29/jetty-maven-plugin-and-https-support</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#introduction">Introduction</a></li>
  <li><a href="#v6">V6</a></li>
  <li><a href="#v8">V8</a></li>
</ul>

<h3 id="introduction">Introduction</h3>
<p><code>jetty-maven-plugin</code>(formerly known as <code>maven-jetty-plugin</code>)is a maven plugin which enables the jetty container in maven project. It is very convenient in development environment since you can start the web app by issue only one command <code>mvn jetty:run</code>. By default it only supports http protocol. Additional configuration is necessary if https is required. Roughly we needs:</p>

<ul>
  <li>A development certificate</li>
  <li>Instruct the jetty plugin to use the certificate</li>
</ul>

<p>Besides <code>jetty-maven-plugin</code>, another maven plugin called <code>keytool-maven-plugin</code> is also needed to generate the certificate.
It should be noted that the plugin has evolved a lot since version 7. The configuration is different from different version. 
<!--more--></p>

<h3 id="v6">V6</h3>
<p>If you are still using the version 6 plugin, please refer to this blog: <a href="http://mrhaki.blogspot.com/2009/05/configure-maven-jetty-plugin-for-ssl.html">Configure Maven Jetty plugin for SSL communication</a>. I tried it in my project, but it is unstable. Sometimes it works and sometimes it fails. So I have to upgrade the plugin to V8.</p>

<h3 id="v8">V8</h3>
<p>Add following sections to the <plugins> section in your pom.xml file(Pay attention to `Line 7 - Line9`, `Line 41`, `Line 47`):</plugins></p>

<p>``` xml</p>
<plugin>
   <groupid>org.mortbay.jetty</groupid>
   <artifactid>jetty-maven-plugin</artifactid>
   <version>8.1.11.v20130520</version>
   <configuration>
      <scanintervalseconds>5</scanintervalseconds>
      <webapp>
         <contextpath>/context</contextpath>
      </webapp>
      <connectors>
         <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
            <port>8080</port>
            <maxidletime>60000</maxidletime>
         </connector>
         <connector implementation="org.eclipse.jetty.server.ssl.SslSelectChannelConnector">
            <port>8443</port>
            <maxidletime>60000</maxidletime>
            <keystore>${project.build.directory}/jetty-ssl.keystore</keystore>
            <password>jetty8</password>
            <keypassword>jetty8</keypassword>
         </connector>
      </connectors>
   </configuration>
</plugin>

<plugin>
   <groupid>org.codehaus.mojo</groupid>
   <artifactid>keytool-maven-plugin</artifactid>
   <executions>
      <execution>
         <phase>generate-resources</phase>
         <id>clean</id>
         <goals>
            <goal>clean</goal>
         </goals>
      </execution>
      <execution>
         <phase>generate-resources</phase>
         <id>genkey</id>
         <goals>
            <goal>generateKeyPair</goal>
         </goals>
      </execution>
   </executions>
   <configuration>
      <keystore>${project.build.directory}/jetty-ssl.keystore</keystore>
      <dname>cn=localhost</dname>
      <keypass>jetty8</keypass>
      <storepass>jetty8</storepass>
      <alias>jetty8</alias>
      <keyalg>RSA</keyalg>
   </configuration>
</plugin>
<p>```</p>

<p>Every thing should be ready now. If you are using Postman as your test tool, please navigate to <code>https://loocalhost:8443/context</code> to accept the certificate before you make further tests after running <code>mvn jetty:run</code>.</p>
]]></content>
  </entry>
  
</feed>
