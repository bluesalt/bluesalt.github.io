<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Golang | Jeff Li]]></title>
  <link href="http://bluesalt.github.io/blog/categories/golang/atom.xml" rel="self"/>
  <link href="http://bluesalt.github.io/"/>
  <updated>2016-12-04T17:07:23+08:00</updated>
  <id>http://bluesalt.github.io/</id>
  <author>
    <name><![CDATA[Jeff Li]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Test if a value implements an interface in golang]]></title>
    <link href="http://bluesalt.github.io/blog/2012/09/25/test-if-a-value-implements-an-interface-in-golang/"/>
    <updated>2012-09-25T06:11:00+08:00</updated>
    <id>http://bluesalt.github.io/blog/2012/09/25/test-if-a-value-implements-an-interface-in-golang</id>
    <content type="html"><![CDATA[<p>We all know that type assert could be used to cast a interface type variable to its actual type value. In the other way, golang allows you to query if a value has implement an interface. This could be used when writing unit test cases, for example, you want to make sure that a struct actually implements certain interfaces.</p>

<!--more-->

<ul>
  <li>
    <p>Assign the value to an empty interface variable</p>
  </li>
  <li>
    <p>Use type assert: assert the empty interface type to any specific interface you are interested</p>
  </li>
</ul>

<p>Here is a small while complete example</p>

<p>```go
package main</p>

<p>import (
  . “launchpad.net/gocheck”
  “testing”
)</p>

<p>func Test(t *testing.T) {
  TestingT(t)
}</p>

<p>type MySuite struct{}</p>

<p>var _ = Suite(&amp;MySuite{})</p>

<p>type IFoobar interface {
  foobar()
}</p>

<p>type Foobar struct {
}</p>

<p>func (f *Foobar) foobar() {
}</p>

<p>func (s *MySuite) TestFoobar(c *C) {
  v := Foobar{}
  var i interface{} = v
  _, ok := i.(IFoobar)
  c.Assert(ok, Equals, false)</p>

<p>var p interface{} = &amp;v
  _, ok = p.(IFoobar)
  c.Assert(ok, Equals, true)
}
```</p>
]]></content>
  </entry>
  
</feed>
